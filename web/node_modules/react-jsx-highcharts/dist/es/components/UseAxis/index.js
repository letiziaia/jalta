import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useContext, useState, useEffect, useDebugValue } from 'react';
import AxisContext from '../AxisContext';
import useChart from '../UseChart';
import createProvidedAxis from '../Axis/createProvidedAxis';
export default function useAxis(axisId) {
  var chart = useChart();
  var contextAxis = useContext(AxisContext);

  var createStateAxis = function createStateAxis() {
    if (contextAxis) return contextAxis;

    if (axisId) {
      var axis = chart.get(axisId);
      return createProvidedAxis(axis);
    }

    return null;
  };

  var _useState = useState(createStateAxis),
      _useState2 = _slicedToArray(_useState, 2),
      providedAxis = _useState2[0],
      setProvidedAxis = _useState2[1];

  useEffect(function () {
    if (providedAxis) return; // we already had axis
    // axis should now be created

    setProvidedAxis(createStateAxis());
  }, []);
  useDebugValue(providedAxis ? providedAxis.id : null);
  return providedAxis;
}