import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { useEffect, memo } from 'react';
import usePlotBandLine from '../UsePlotBandLine';
var PlotBandLineLabel = /*#__PURE__*/memo(function (props) {
  var providedPlotbandline = usePlotBandLine();
  useEffect(function () {
    if (!providedPlotbandline) return;

    var text = props.children,
        id = props.id,
        rest = _objectWithoutProperties(props, ["children", "id"]);

    updatePlotBandLineLabel(providedPlotbandline.object, _objectSpread({
      text: text
    }, rest));
  });
  useEffect(function () {
    return function () {
      if (!providedPlotbandline) return;

      try {
        updatePlotBandLineLabel(providedPlotbandline.object, {
          text: null
        });
      } catch (_unused) {// ignore as axis might have been unmounted
      }
    };
  }, []);
  return null;
});

var updatePlotBandLineLabel = function updatePlotBandLineLabel(plotbandline, config) {
  if (plotbandline) {
    plotbandline.options.label = getLabelProps(config);
    plotbandline.render();
  }
};

var getLabelProps = function getLabelProps(props) {
  var text = props.text,
      formatter = props.formatter,
      align = props.align,
      rotation = props.rotation,
      style = props.style,
      textAlign = props.textAlign,
      useHTML = props.useHTML,
      verticalAlign = props.verticalAlign,
      x = props.x,
      y = props.y;
  return {
    text: text,
    formatter: formatter,
    align: align,
    rotation: rotation,
    style: style,
    textAlign: textAlign,
    useHTML: useHTML,
    verticalAlign: verticalAlign,
    x: x,
    y: y
  };
};

PlotBandLineLabel.displayName = 'PlotBandLineLabel';
export default PlotBandLineLabel;