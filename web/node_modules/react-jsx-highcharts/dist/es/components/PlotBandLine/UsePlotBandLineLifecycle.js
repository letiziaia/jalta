import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { useRef, useEffect, useState } from 'react';
import { v4 as uuid } from 'uuid';
import useModifiedProps from '../UseModifiedProps';
import useAxis from '../UseAxis';
export default function usePlotBandLineLifecycle(props, plotType) {
  var _props$id = props.id,
      id = _props$id === void 0 ? uuid : _props$id,
      axisId = props.axisId,
      children = props.children,
      rest = _objectWithoutProperties(props, ["id", "axisId", "children"]);

  var axis = useAxis(axisId);
  var idRef = useRef();

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      plotbandline = _useState2[0],
      setPlotbandline = _useState2[1];

  var modifiedProps = useModifiedProps(rest);
  useEffect(function () {
    if (!axis) return;

    if (!plotbandline || modifiedProps !== false) {
      if (!plotbandline) {
        idRef.current = typeof id === 'function' ? id() : id;
      }

      var myId = idRef.current;

      var opts = _objectSpread({
        id: myId
      }, rest);

      if (plotbandline) axis.removePlotBandOrLine(idRef.current);
      axis.addPlotBandOrLine(opts, plotType);
      setPlotbandline({
        id: myId,

        get object() {
          /* when parent axis is updated, the plotlines and plotbands are recreated
             therefore the object can't be cached here
          */
          if (axis && axis.object && axis.object.plotLinesAndBands) {
            return axis.object.plotLinesAndBands.find(function (plb) {
              return plb.id === myId;
            });
          }

          return null;
        }

      });
    }
  });
  useEffect(function () {
    return function () {
      try {
        axis.removePlotBandOrLine(idRef.current);
      } catch (_unused) {// ignore as axis might have been already unmounted
      }
    };
  }, []);
  return plotbandline;
}