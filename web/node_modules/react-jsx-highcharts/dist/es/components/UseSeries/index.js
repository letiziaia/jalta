import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useContext, useState, useEffect, useDebugValue } from 'react';
import SeriesContext from '../SeriesContext';
import useChart from '../UseChart';
import createProvidedSeries from '../Series/createProvidedSeries';
export default function useSeries(seriesId) {
  var contextSeries = useContext(SeriesContext);
  var chart = useChart();

  var createStateSeries = function createStateSeries() {
    if (contextSeries) return contextSeries;

    if (seriesId) {
      var mySeries = chart.get(seriesId);
      return createProvidedSeries(mySeries);
    }

    return null;
  };

  var _useState = useState(createStateSeries),
      _useState2 = _slicedToArray(_useState, 2),
      providedSeries = _useState2[0],
      setProvidedSeries = _useState2[1];

  useEffect(function () {
    if (providedSeries) return; // we already had series
    // series should now be created

    setProvidedSeries(createStateSeries());
  }, []);
  useDebugValue(providedSeries ? providedSeries.id : null);
  return providedSeries;
}