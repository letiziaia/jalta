import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { useRef, useEffect, memo } from 'react';
import PropTypes from 'prop-types';
import { v4 as uuid } from 'uuid';
import { logModuleErrorMessage } from '../../utils/warnings';
import useChart from '../UseChart';
var Annotation = /*#__PURE__*/memo(function (props) {
  var _props$id = props.id,
      id = _props$id === void 0 ? uuid : _props$id,
      children = props.children,
      rest = _objectWithoutProperties(props, ["id", "children"]);

  var _useChart = useChart(),
      addAnnotation = _useChart.addAnnotation,
      removeAnnotation = _useChart.removeAnnotation;

  if (process.env.NODE_ENV === 'development') {
    if (addAnnotation === null) {
      logModuleErrorMessage('<Annotation />', 'annotations');
    }
  }

  var idRef = useRef();
  useEffect(function () {
    idRef.current = typeof id === 'function' ? id() : id;
    var myId = idRef.current;

    var opts = _objectSpread({
      id: myId
    }, rest);

    addAnnotation(opts);
    return function () {
      try {
        removeAnnotation(myId);
      } catch (_unused) {// ignoring as parent chart might be unmounted
      }
    };
  });
  return null;
});
Annotation.propTypes = {
  id: PropTypes.oneOfType([PropTypes.string, PropTypes.func])
};
Annotation.displayName = 'Annotation';
export default Annotation;