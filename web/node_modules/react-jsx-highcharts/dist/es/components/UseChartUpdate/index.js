import { useEffect } from 'react';
import useChart from '../UseChart';
import useModifiedProps from '../UseModifiedProps';

var noop = function noop(c) {
  return c;
};

var useChartUpdate = function useChartUpdate(props) {
  var updateFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
  var destroyFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;
  var childrenIsText = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  var chart = useChart();
  var modifiedProps = useModifiedProps(props, childrenIsText);
  useEffect(function () {
    if (modifiedProps !== false) {
      updateFn(chart, modifiedProps);
      chart.needsRedraw();
    }
  });
  useEffect(function () {
    return function () {
      try {
        destroyFn(chart);
      } catch (_unused) {// ignore as chart might have been already unmounted
      }

      chart.needsRedraw();
    };
  }, []);
};

export default useChartUpdate;