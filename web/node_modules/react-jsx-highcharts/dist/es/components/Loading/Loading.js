import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { useEffect, memo } from 'react';
import PropTypes from 'prop-types';
import useModifiedProps from '../UseModifiedProps';
import useChart from '../UseChart';
var Loading = /*#__PURE__*/memo(function (_ref) {
  var children = _ref.children,
      _ref$isLoading = _ref.isLoading,
      isLoading = _ref$isLoading === void 0 ? true : _ref$isLoading,
      restProps = _objectWithoutProperties(_ref, ["children", "isLoading"]);

  var chart = useChart();
  var modifiedProps = useModifiedProps(restProps);
  useEffect(function () {
    if (modifiedProps !== false) {
      updateLoading(modifiedProps, chart);
    }

    isLoading ? chart.showLoading(children) : chart.hideLoading();
  });
  useEffect(function () {
    return function () {
      try {
        chart.hideLoading();
      } catch (_unused) {// ignore as chart might have been unmounted
      }
    };
  }, []);
  return null;
});

var updateLoading = function updateLoading(config, chart) {
  chart.update({
    loading: config
  }, true);
};

Loading.propTypes = {
  isLoading: PropTypes.bool,
  hideDuration: PropTypes.number,
  labelStyle: PropTypes.object,
  showDuration: PropTypes.number,
  style: PropTypes.object
};
Loading.displayName = 'Loading';
export default Loading;