import { useEffect, useRef } from 'react';
export default function useDelayOnce(callback) {
  var delayTimeout = useRef(null);
  var unmounted = useRef(false);
  useEffect(function () {
    delayTimeout.current = window.requestAnimationFrame(function () {
      if (unmounted.current === false) {
        callback();
      }

      delayTimeout.current = null;
    });
    return function () {
      unmounted.current = true;

      if (delayTimeout.current !== null) {
        window.cancelAnimationFrame(delayTimeout.current);
      }
    };
  }, []);
}