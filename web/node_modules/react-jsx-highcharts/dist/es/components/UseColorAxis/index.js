import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import { useContext, useState, useEffect, useDebugValue } from 'react';
import ColorAxisContext from '../ColorAxisContext';
import useChart from '../UseChart';
import createProvidedColorAxis from '../ColorAxis/createProvidedColorAxis';
export default function useColorAxis(colorAxisId) {
  var chart = useChart();
  var contextColorAxis = useContext(ColorAxisContext);

  var createStateColorAxis = function createStateColorAxis() {
    if (contextColorAxis) return contextColorAxis;

    if (colorAxisId) {
      var colorAxis = chart.get(colorAxisId);
      return createProvidedColorAxis(colorAxis);
    }

    return null;
  };

  var _useState = useState(createStateColorAxis),
      _useState2 = _slicedToArray(_useState, 2),
      providedColorAxis = _useState2[0],
      setProvidedColorAxis = _useState2[1];

  useEffect(function () {
    if (providedColorAxis) return; // we already had axis
    // axis should now be created

    setProvidedColorAxis(createStateColorAxis());
  }, []);
  useDebugValue(providedColorAxis ? providedColorAxis.id : null);
  return providedColorAxis;
}