import { useRef, useEffect, useDebugValue } from 'react';
import getModifiedProps from '../../utils/getModifiedProps';
export default function useModifiedProps(props) {
  var childrenIsText = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var ref = useRef();
  useEffect(function () {
    ref.current = props;
  });
  var modifiedProps = getModifiedProps(ref.current, props, childrenIsText);
  useDebugValue(modifiedProps ? 'Modified' : 'Not modified');
  return modifiedProps;
}